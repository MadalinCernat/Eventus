@page "/createevent"
@using System.Security.Claims
@using EventusUI.Components
@inject ISqlCrud _db;
@inject IHttpContextAccessor _context
@inject NavigationManager NavigationManager

<h3 class="text-center">Create Event</h3>
<hr class="mb-5"/>

<EditForm OnValidSubmit="InsertEvent" Model="@newEvent">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label for="title">Title</label>
                <InputText id="title" @bind-Value="newEvent.Title" class="form-control" />
            </div>

            <div class="form-group mt-3">
                <label for="description">Description</label>
                <InputText id="description" @bind-Value="newEvent.Description" class="form-control" />
            </div>

            <div class="form-group mt-3">
                <label for="startdatetime">Start Date & Time</label>
                <div id="startdatetime"><DateTimePicker @bind-DateAndTime="newEvent.StartDateTime"/></div>
                
            </div>

            <div class="form-group mt-3">
                <label for="enddatetime">End Date & Time</label>
                <div id="enddatetime"><DateTimePicker @bind-DateAndTime="newEvent.EndDateTime"/></div>
            </div>
        </div>

        <div class="col-md-6">
            <div class="form-group">
                <label for="entrancefee">Entrance Fee</label>
                <InputNumber id="entrancefee" @bind-Value="newEvent.EntranceFee" class="form-control" />
            </div>

            <div class="form-group mt-3">
                <label for="url">Url</label>
                <InputText id="url" @bind-Value="newEvent.Url" class="form-control" />
            </div>

            <!-- Dropdown for selecting place -->
            <div class="form-group mt-3">
                <select @bind="newEvent.PlaceId" class="rounded p-1">
                    <option value=0 disabled selected hidden>
                        Select Place
                    </option>
                    @foreach (var place in placesAvailable)
                    {
                        <option value="@place.Id">@place.Name</option>
                    }
                </select>
            </div>

            <div class="form-group mt-3">
                <label for="allowrequests">Allow Requests</label>
                <InputCheckbox id="allowrequests" @bind-Value="newEvent.AllowRequests"/>
            </div>

            <div class="form-group mt-3 text-center">
                <button class="btn btn-outline-dark" type="submit">Submit</button>
            </div>
        </div>
    </div>
</EditForm>


@code {
    private EventUIModel newEvent;
    private List<PlaceModel> placesAvailable = new List<PlaceModel>();
    public async Task InsertEvent()
    {
        var place = await _db.GetPlaceById(newEvent.PlaceId);
        // Create database model for event
        var dbEvent = new EventModel
            {
                Title = newEvent.Title,
                Description = newEvent.Description,
                Place = place,
                CreatedByUserId = _context.HttpContext.User.FindFirstValue(ClaimTypes.NameIdentifier),
                DateCreated = DateTime.Now,
                StartDateTime = newEvent.StartDateTime,
                EndDateTime = newEvent.EndDateTime,
                EntranceFee = newEvent.EntranceFee,
                Url = newEvent.Url,
                AllowRequests = newEvent.AllowRequests,
                IsActive = true
            };
        // Insert event
        await _db.InsertEvent(dbEvent);
        NavigationManager.NavigateTo("");
    }
    protected override async Task OnInitializedAsync()
    {
        newEvent = new EventUIModel
            {
                StartDateTime = DateTime.Today,
                EndDateTime = DateTime.Today,
            };
        // Get all places available from the db
        placesAvailable = await _db.GetAllPlaces();
    }
}
